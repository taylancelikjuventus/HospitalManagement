<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>